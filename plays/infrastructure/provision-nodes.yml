
- hosts: all
  gather_facts: false
  connection: local

  tasks:

  - name: accept new ssh fingerprints
    shell: ssh-keygen -R  {{ item }} && sleep 1 && ssh-keyscan -t rsa {{ item }} >> ~/.ssh/known_hosts
    with_items: "{{ hostvars[inventory_hostname]['ansible_host'] }}"




- hosts: all
  gather_facts: false

  tasks:

  # ubuntu16.04 doesn't come with the correct python
  - name: install python 2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

  - name: apt | remove docker
    apt:
      pkg: "{{ item }}"
      state: absent
    with_items:
      - docker
      - docker-ce

  - name: apt | install aptitude and pip
    apt:
      pkg: "{{ item }}"
      state: present
    with_items:
      - aptitude
      - python-pip
      - python-dev
      - build-essential

  - name: apt | adding docker APT key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg

  - name: apt | adding docker repository
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
      update_cache: yes

  - name: apt | update all packages to the latest version
    apt:
      upgrade: yes
      update_cache: yes
      cache_valid_time: 3600
      autoclean: yes
      autoremove: yes

  - name: apt | adding docker repository
    shell: apt-cache policy docker-ce

  - name: apt | make sure the required packages are installed
    apt:
      pkg: "{{ item }}"
      state: present
    with_items:
      #- python-pip
      #- python-dev
      #- build-essential
      - docker-ce=17.05.0~ce-0~ubuntu-xenial

  - stat: path=/var/run/reboot-required
    register: reboot

  - name: restart machine
    command: reboot
    async: 0
    poll: 0
    ignore_errors: true
    when: reboot.stat.exists

  - name: waiting for server to come back
    local_action: wait_for host={{ ansible_ssh_host }} state=started port=22 delay=1 timeout=300
    when: reboot.stat.exists

  - shell: pip install --upgrade pip

  # https://github.com/docker/docker-py
  - name: install docker python modules
    pip:
      name: "{{ item }}"
      state: present
    with_items:
      - docker-compose
      - docker

#- hosts: all
#  connection: local
#  gather_facts: false
#
#  tasks:
#
#  - name: docker-machine upgrade
#    shell: "docker-machine upgrade {{ inventory_hostname }}"

